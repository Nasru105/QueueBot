from datetime import datetime
import pytz
from telegram import InlineKeyboardButton, InlineKeyboardMarkup, User

from config import STUDENTS_USERNAMES


async def start_help(update, context):
    chat = update.effective_chat
    message_id = update.message.message_id
    message_thread_id = update.message.message_thread_id
    await safe_delete(context, chat, message_id)

    await context.bot.send_message(
        chat_id=chat.id,
        text="–≠—Ç–æ—Ç –±–æ—Ç –ø–æ–∑–≤–æ–ª—è–µ—Ç –≤—Å—Ç–∞–≤–∞—Ç—å –≤ –æ—á–µ—Ä–µ–¥—å, –≤—ã—Ö–æ–¥–∏—Ç—å –∏–∑ –Ω–µ—ë, –≤–∏–¥–µ—Ç—å —Ç–µ–∫—É—â—É—é –æ—á–µ—Ä–µ–¥—å. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –∏–ª–∏ –∫–æ–º–∞–Ω–¥—ã:\n"
             "/join ‚Äì –≤—Å—Ç–∞—Ç—å –≤ –æ—á–µ—Ä–µ–¥—å\n"
             "/leave ‚Äì –≤—ã–π—Ç–∏ –∏–∑ –æ—á–µ—Ä–µ–¥—å\n"
             "/queue ‚Äì –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ—á–µ—Ä–µ–¥—å\n\n"
             "–ö–æ–º–∞–Ω–¥—ã –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤:\n"
             "/clear - –æ—á–∏—Å—Ç–∏—Ç—å –æ—á–µ—Ä–µ–¥—å\n"
             "/insert <–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è> <–ò–Ω–¥–µ–∫—Å> - –≤—Å—Ç–∞–≤–∏—Ç—å  <–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è> –Ω–∞ <–ò–Ω–¥–µ–∫—Å> –º–µ—Å—Ç–æ –≤ –æ—á–µ—Ä–µ–¥–∏\n"
             "/remove <–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è> –∏–ª–∏ <–ò–Ω–¥–µ–∫—Å> - —É–¥–∞–ª–∏—Ç—å <–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è> –∏–ª–∏ <–ò–Ω–¥–µ–∫—Å> –∏–∑ –æ—á–µ—Ä–µ–¥–∏\n"
             "/replace <–ò–Ω–¥–µ–∫—Å1> <–ò–Ω–¥–µ–∫—Å2> - –ø–æ–º–µ–Ω—è—Ç—å –º–µ—Å—Ç–∞–º–∏ <–ò–Ω–¥–µ–∫—Å1> –∏ <–ò–Ω–¥–µ–∫—Å2> –≤ –æ—á–µ—Ä–µ–¥–∏\n",
        message_thread_id=message_thread_id
    )

# –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è.
async def safe_delete(context, chat, message_id):
    try:
        await context.bot.delete_message(chat_id=chat.id, message_id=message_id)
    except Exception as e:
        print(
            f"{chat.title if chat.title else chat.username}: {get_time()} –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ {message_id}: {e}",
            flush=True)


# –°–æ–∑–¥–∞–Ω–∏–µ inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏–π –æ—á–µ—Ä–µ–¥–∏.
def get_queue_keyboard():
    keyboard = [
        [
            InlineKeyboardButton("üîº –í—Å—Ç–∞—Ç—å –≤ –æ—á–µ—Ä–µ–¥—å", callback_data="join"),
            InlineKeyboardButton("üîΩ –í—ã–π—Ç–∏", callback_data="leave")
        ]
    ]
    return InlineKeyboardMarkup(keyboard)


# –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ —Å—Ç—Ä–æ–∫–æ–≤—ã—Ö –∫–ª—é—á–µ–π –∏–∑ JSON –æ–±—Ä–∞—Ç–Ω–æ –≤ —Å–ª–æ–≤–∞—Ä–∏ —Å —á–∏—Å–ª–æ–≤—ã–º–∏ –∫–ª—é—á–∞–º–∏.
def reformat(queues_str, last_queue_message_str):
    queues, last_queue_message = {}, {}

    # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –∫–ª—é—á–∏ –æ—á–µ—Ä–µ–¥–µ–π –≤ —á–∏—Å–ª–∞ (chat_id)
    for queue in queues_str:
        queues[int(queue)] = queues_str[queue]

    # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –∫–ª—é—á–∏ —Å–æ–æ–±—â–µ–Ω–∏–π (chat_id) –≤ —á–∏—Å–ª–∞
    for id in last_queue_message_str:
        last_queue_message[int(id)] = last_queue_message_str[id]

    return queues, last_queue_message


def get_time():
    moscow_tz = pytz.timezone('Europe/Moscow')
    moscow_time = datetime.now(moscow_tz)
    return moscow_time.strftime("%D %H:%M:%S")


def get_name(user: User):
    if user.username in STUDENTS_USERNAMES:
        name = STUDENTS_USERNAMES[user.username][0]
    else:
        name = f"{user.first_name} {user.last_name or ''}".strip()
    return name
